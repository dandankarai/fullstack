// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String  @id @default(uuid())
  name               String
  email              String
  nameFarm           String?
  password           String
  stripe_customer_id String? //boolean for the subscription

  created_at DateTime? @default(now())
  update_at  DateTime? @default(now())

  subscriptions Subscription?
  Cow           Cow[] // 1 user can have many cows
  // Service       Service[]

  @@map("users")
}

model Subscription {
  id         String    @id
  status     String
  priceId    String
  created_at DateTime? @default(now())
  update_at  DateTime? @default(now())
  userId     String    @unique
  user       User      @relation(fields: [userId], references: [id])

  @@map("subscriptions")
}

model Cow {
  id                   String   @id @default(uuid())
  name                 String
  statusInsemination   Boolean? @default(false)
  dateInsemination     String?
  nameBull             String?
  birthForecast        String?
  productionPerLiters  String?
  dateMilkRegistration String?

  created_at DateTime? @default(now())
  update_at  DateTime? @default(now())
  user       User?     @relation(fields: [user_id], references: [id])
  user_id    String?

  @@map("Cow")
}

// model Service {
//   id       String @id @default(uuid())
//   customer String

//   created_at DateTime? @default(now())
//   update_at  DateTime? @default(now())

//   haircut Haircut @relation(fields: [haircut_id], references: [id])

//   haircut_id String

//   user User @relation(fields: [user_id], references: [id])

//   user_id String

//   @@map("services")
// }
